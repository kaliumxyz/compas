import{_ as e,c as a,o as i,a as t}from"./app.d0d65fcc.js";const u='{"title":"Release notes v0.0.138","description":"","frontmatter":{},"headers":[{"level":2,"title":"Code gen","slug":"code-gen"},{"level":2,"title":"Migrations","slug":"migrations"},{"level":2,"title":"In closing","slug":"in-closing"}],"relativePath":"releases/0.0.138.md","lastUpdated":1635769453832}',o={},s=t('<h1 id="release-notes-v0-0-138" tabindex="-1">Release notes v0.0.138 <a class="header-anchor" href="#release-notes-v0-0-138" aria-hidden="true">#</a></h1><p>We had 14 releases without release notes, so there must be big breaking changes.</p><h2 id="code-gen" tabindex="-1">Code gen <a class="header-anchor" href="#code-gen" aria-hidden="true">#</a></h2><p>The code generator got a few small improvements</p><ul><li>router: nicely catch invalid encoded path params and throw a 400 error</li><li>sql: improve performance of oneToMany queryBuilder calls by 10 to 15 percent</li><li>validator: add mimeTypes support to <code>T.file()</code>, this allows for setting things like: <code>T.file().mimeTypes(&quot;image/jpg&quot;, &quot;image/png&quot;)</code>. This is only validated on the server after parsing posted body.</li></ul><h2 id="migrations" tabindex="-1">Migrations <a class="header-anchor" href="#migrations" aria-hidden="true">#</a></h2><p>The previous migration system with namespaces support had various issues when namespaces where dropped or added. The production environments would work fine, since the migration system allows for missing migrations files, but when resetting the development database, migration files were missing when a package was removed. This causes migration files to become invalid. When a package is added, you would like the migrations of the package to follow in time with the application migrations, but that&#39;s complex to pull off.</p><p>To ease all this we decided to drop namespaces support and instead enforce you to &#39;vendor&#39; migrations from packages. This is a big braking change, but here are the steps:</p><ul><li>Vendor the @compas/store migrations per <a href="https://compasjs.com/features/migrations.html#built-in-migration-requirements" target="_blank" rel="noopener noreferrer">the migration docs</a></li><li>Vender migrations of the packages you use following their docs</li><li>Update the migrate commands to <code>yarn compas docker migrate</code></li><li>Stop the migration service and do a deploy</li><li>Manually do a <code>yarn compas docker migrate rebuild</code></li><li>Start the migration service back up.</li></ul><h2 id="in-closing" tabindex="-1">In closing <a class="header-anchor" href="#in-closing" aria-hidden="true">#</a></h2><p>We are somehow getting to a pretty stable point. The docs however, are quite lacking. Between this and the previous release I added docs about environment variables and migrations. It&#39;s a slow and tedious process. Please submit doc request issues as well in the Compas <a href="https://github.com/compasjs/compas/issues" target="_blank" rel="noopener noreferrer">issue tracker</a>.</p>',11),r=[s];function n(l,d,c,h,p,m){return i(),a("div",null,r)}var f=e(o,[["render",n]]);export{u as __pageData,f as default};
